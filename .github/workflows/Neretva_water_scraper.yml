name: Daily Water Level Scrape

on:
  schedule:
    - cron: '0 11 * * *' # Runs daily at 11:00 UTC (which is 13:00 CEST)
  workflow_dispatch:
    # Allows you to manually trigger the workflow from the GitHub Actions tab

jobs:
  scrape:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to push data back to the repo

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Or your preferred version, e.g., '3.10', '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        sudo apt-get update
        sudo apt-get install -y firefox

    - name: Which firefox
      run: |
        find /snap/firefox/ -name firefox
    
    # - name: Install dependencies for Firefox
    #   run: |
    #     sudo apt-get install -y \
    #       libgtk-3-0 \
    #       libdbus-glib-1-2 \
    #       libx11-xcb1 \
    #       libxtst6 \
    #       libxrandr2 \
    #       libxss1 \
    #       libnss3 \
    #       libxcb-shm0 \
    #       libxcomposite1 \
    #       libxcursor1 \
    #       libxdamage1 \
    #       libxi6 \
    #       xauth \
    #       xvfb

    - name: Run Jadran.ba Scraper
      run: |
        python GH_jadranBA_scraper.py
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Pass the built-in GITHUB_TOKEN as GH_TOKEN

    - name: Run Vodostaji.hr Scraper
      run: |
        python GH_HRvode_scraper.py
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Pass the built-in GITHUB_TOKEN as GH_TOKEN
    
    - name: Set timestamp
      id: vars
      run: echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT

    - name: Upload water level data
      uses: actions/upload-artifact@v4
      with:
        name: water-levels-${{ steps.vars.outputs.timestamp }}
        path: scraped_data_vodostaji_voda_hr/*.json

    - name: Print working directory
      if: failure()
      run: pwd && ls -la

    - name: Dump logs if failed
      if: failure()
      run: |
        echo "== Firefox crash log =="
        cat firefox.moz_log || echo "No firefox.moz_log found"

    
    - name: Dump child log if failed
      if: failure()
      run: |
        echo "== Firefox crash log =="
        cat firefox.child-1.moz_log || echo "No firefox.moz_log found"



    # GitHub Actions will now only notify you on workflow failure by default.
